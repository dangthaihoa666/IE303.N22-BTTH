/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package QLSV;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author admind
 */
public class QLSV extends javax.swing.JFrame {

    /**
     * Creates new form QLSV
     */
    private Search search;

    public QLSV() {
        initComponents();
        setTitle("Quản lý sinh viên");

        jbtnAdd.setEnabled(false);
        jbtnEdit.setEnabled(false);
        jbtnSearch.setEnabled(false);
        jbtnDel.setEnabled(false);

        search = new Search(this);
    }

    public void search(String mssv, String name, boolean checkMSSV, boolean checkName) {
        // Do something with the parameters

        String query = "SELECT * FROM sinhvien WHERE ";
        if (checkMSSV) {
            query += "MSSV LIKE '%" + mssv + "%'";
            if (checkName) {
                query += " AND HoTen LIKE '%" + name + "%'";
            }
        } else if (checkName) {
            query += "HoTen LIKE '%" + name + "%'";
        }
        try {
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/sv", "root", "123456");
            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery(query);
            DefaultTableModel model = (DefaultTableModel) jTableSV.getModel();
            model.setRowCount(0);
            while (rs.next()) {
                String mssv1 = rs.getString("MSSV");
                String name1 = rs.getString("HoTen");
                String birth = rs.getString("NgaySinh");
                String toan = rs.getString("DiemToan");
                String ly = rs.getString("DiemLy");
                String hoa = rs.getString("DiemHoa");
                String dtb = rs.getString("DiemTrungBinh");
                Object[] row = {mssv1, name1, birth, toan, ly, hoa, dtb};
                model.addRow(row);
            }
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(QLSV.class.getName()).log(Level.SEVERE, null, ex);

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jtxtMSSV = new javax.swing.JTextField();
        jtxtName = new javax.swing.JTextField();
        jtxtBirth = new javax.swing.JTextField();
        jbtnAdd = new javax.swing.JButton();
        jbtnEdit = new javax.swing.JButton();
        jbtnDel = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jtxtToan = new javax.swing.JTextField();
        jtxtHoa = new javax.swing.JTextField();
        jtxtLy = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableSV = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jbtnOpenDatabase = new javax.swing.JButton();
        jbtnSearch = new javax.swing.JButton();
        jbtnExit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Thông tin sinh viên");

        jLabel2.setText("Mã số sinh viên:");

        jLabel3.setText("Tên sinh viên:");

        jLabel4.setText("Ngày sinh: ");

        jbtnAdd.setText("Thêm");
        jbtnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnAddActionPerformed(evt);
            }
        });

        jbtnEdit.setText("Sửa");
        jbtnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnEditActionPerformed(evt);
            }
        });

        jbtnDel.setText("Xóa");
        jbtnDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnDelActionPerformed(evt);
            }
        });

        jLabel5.setText("Điểm toán");

        jLabel7.setText("Điểm hóa");

        jLabel8.setText("Điểm lý");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jtxtBirth, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE)
                                    .addComponent(jtxtName, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jtxtMSSV, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGap(36, 36, 36)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jtxtToan))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addGap(28, 28, 28)
                                        .addComponent(jtxtLy))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jbtnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jtxtHoa, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jbtnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(123, 123, 123)
                                .addComponent(jbtnDel, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(21, 21, 21))))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jtxtMSSV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jtxtToan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jtxtLy, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtxtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jtxtBirth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7)
                        .addComponent(jtxtHoa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtnAdd)
                    .addComponent(jbtnEdit)
                    .addComponent(jbtnDel))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        jTableSV.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "MSSV", "Tên sinh viên", "Ngày sinh", "Toán", "Lý", "Hóa", "DTB"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, true, true, true, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableSV.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTableSV);

        jLabel6.setText("Danh sách sinh viên");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 551, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jbtnOpenDatabase.setText("Mở CSDL");
        jbtnOpenDatabase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnOpenDatabaseActionPerformed(evt);
            }
        });

        jbtnSearch.setText("Tìm kiếm");
        jbtnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnSearchActionPerformed(evt);
            }
        });

        jbtnExit.setText("Thoát");
        jbtnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(32, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jbtnOpenDatabase)
                        .addGap(18, 18, 18)
                        .addComponent(jbtnSearch)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbtnExit)
                        .addGap(40, 40, 40))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtnOpenDatabase)
                    .addComponent(jbtnSearch)
                    .addComponent(jbtnExit))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void jbtnOpenDatabaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnOpenDatabaseActionPerformed
        try {
            // TODO add your handling code here:
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/sv", "root", "123456");
            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery("select * from sinhvien");
            DefaultTableModel model = (DefaultTableModel) jTableSV.getModel();
            while (rs.next()) {
                String mssv = rs.getString("MSSV");
                String name = rs.getString("HoTen");
                String birth = rs.getString("NgaySinh");
                String toan = rs.getString("DiemToan");
                String ly = rs.getString("DiemLy");
                String hoa = rs.getString("DiemHoa");
                String dtb = rs.getString("DiemTrungBinh");
                Object[] row = {mssv, name, birth, toan, ly, hoa, dtb};
                model.addRow(row);
            }
            con.close();

            JOptionPane.showMessageDialog(this, "Mở dữ liệu trong CSDL thành công!", "Message", JOptionPane.INFORMATION_MESSAGE);

            jbtnAdd.setEnabled(true);
            jbtnEdit.setEnabled(true);
            jbtnDel.setEnabled(true);
            jbtnSearch.setEnabled(true);

        } catch (SQLException ex) {
            Logger.getLogger(QLSV.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(QLSV.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jbtnOpenDatabaseActionPerformed

    private void jbtnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnSearchActionPerformed
        // TODO add your handling code here:

        search.setVisible(true);

    }//GEN-LAST:event_jbtnSearchActionPerformed

    private void jbtnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnExitActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jbtnExitActionPerformed

    private void jbtnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnAddActionPerformed
        // TODO add your handling code here:
        // Retrieve the information from the text fields
        String mssv = jtxtMSSV.getText();
        String name = jtxtName.getText();
        String birth = jtxtBirth.getText();
        String toan = jtxtToan.getText();
        String ly = jtxtLy.getText();
        String hoa = jtxtHoa.getText();

        // Check if all fields are filled
        if (mssv.equals("") || name.equals("") || birth.equals("") || toan.equals("") || ly.equals("") || hoa.equals("")) {
            JOptionPane.showMessageDialog(this, "Vui lòng không được bỏ trống các ô thông tin!", "Thông báo", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Check if birth is in the correct format
        if (!birth.matches("(\\d{2})/(\\d{2})/(\\d{4})")) {
            JOptionPane.showMessageDialog(this, "Ngày sinh chưa đúng định dạng!", "Thông báo", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // Check if MSSV already exists
        for (int i = 0; i < jTableSV.getRowCount(); i++) {
            if (mssv.equals(jTableSV.getValueAt(i, 0))) {
                JOptionPane.showMessageDialog(this, "Mã số sinh viên " + mssv + " đã tồn tại!", "Thông báo", JOptionPane.ERROR_MESSAGE);
                return;
            }
        }

        JOptionPane.showMessageDialog(this, "Thêm sinh viên " + mssv + " thành công!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);

        try {
            // TODO add your handling code here:
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/sv", "root", "123456");
            PreparedStatement stmt = con.prepareStatement("insert into sinhvien(MSSV, HoTen, NgaySinh, DiemToan, DiemLy, DiemHoa, DiemTrungBinh) values(?,?,?,?,?,?,?)");
            stmt.setString(1, mssv);
            stmt.setString(2, name);
            stmt.setString(3, birth);
            stmt.setString(4, toan);
            stmt.setString(5, ly);
            stmt.setString(6, hoa);

            // Calculate the average of the three grades
            float diemToan = Float.parseFloat(toan);
            float diemLy = Float.parseFloat(ly);
            float diemHoa = Float.parseFloat(hoa);
            float diemTrungBinh = (diemToan + diemLy + diemHoa) / 3;

            stmt.setFloat(7, diemTrungBinh);
            stmt.executeUpdate();
            con.close();

            DefaultTableModel model = (DefaultTableModel) jTableSV.getModel();
            Object[] row = {mssv, name, birth, toan, ly, hoa, diemTrungBinh};
            model.addRow(row);

        } catch (SQLException ex) {
            Logger.getLogger(QLSV.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(QLSV.class.getName()).log(Level.SEVERE, null, ex);
        }
}//GEN-LAST:event_jbtnAddActionPerformed

    private void jbtnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnEditActionPerformed
        // TODO add your handling code here:
        int selectedRow = jTableSV.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Bạn vui lòng chọn sinh viên trong danh sách!", "Thông báo", JOptionPane.WARNING_MESSAGE);
        } else {
            String mssv = jtxtMSSV.getText();
            String name = jtxtName.getText();
            String birth = jtxtBirth.getText();
            String toan = jtxtToan.getText();
            String ly = jtxtLy.getText();
            String hoa = jtxtHoa.getText();
            // Check if all fields are filled
            if (mssv.equals("") || name.equals("") || birth.equals("") || toan.equals("") || ly.equals("") || hoa.equals("")) {
                JOptionPane.showMessageDialog(this, "Vui lòng không được bỏ trống các ô thông tin!", "Thông báo", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Check if birth is in the correct format
            if (!birth.matches("(\\d{2})/(\\d{2})/(\\d{4})")) {
                JOptionPane.showMessageDialog(this, "Ngày sinh chưa đúng định dạng!", "Thông báo", JOptionPane.WARNING_MESSAGE);
                return;
            }

            try {
                // TODO add your handling code here:
                Class.forName("com.mysql.cj.jdbc.Driver");
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/sv", "root", "123456");
                PreparedStatement stmt = con.prepareStatement("update sinhvien set HoTen=?, NgaySinh=?, DiemToan=?, DiemLy=?, DiemHoa=?, DiemTrungBinh=? where MSSV=?");
                stmt.setString(1, name);
                stmt.setString(2, birth);
                stmt.setString(3, toan);
                stmt.setString(4, ly);
                stmt.setString(5, hoa);

                // Calculate the average of the three grades
                float diemToan = Float.parseFloat(toan);
                float diemLy = Float.parseFloat(ly);
                float diemHoa = Float.parseFloat(hoa);
                float diemTrungBinh = (diemToan + diemLy + diemHoa) / 3;

                stmt.setFloat(6, diemTrungBinh);
                stmt.setString(7, mssv);
                stmt.executeUpdate();
                con.close();

                DefaultTableModel model = (DefaultTableModel) jTableSV.getModel();
                model.setValueAt(name, selectedRow, 1);
                model.setValueAt(birth, selectedRow, 2);
                model.setValueAt(toan, selectedRow, 3);
                model.setValueAt(ly, selectedRow, 4);
                model.setValueAt(hoa, selectedRow, 5);
                model.setValueAt(diemTrungBinh, selectedRow, 6);

                JOptionPane.showMessageDialog(this, "Cập nhật thông tin sinh viên " + mssv + " thành công!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);

            } catch (SQLException ex) {
                Logger.getLogger(QLSV.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(QLSV.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jbtnEditActionPerformed

    private void jbtnDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnDelActionPerformed
        // TODO add your handling code here:
        int selectedRow = jTableSV.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Bạn vui lòng chọn sinh viên trong danh sách!", "Thông báo", JOptionPane.WARNING_MESSAGE);
        } else {

            int dialogResult = JOptionPane.showConfirmDialog(null, "Bạn có chắc chắn muốn xóa sinh viên đó không?", "Message", JOptionPane.YES_NO_OPTION);
            if (dialogResult == JOptionPane.YES_OPTION) {
                String mssv = jTableSV.getValueAt(selectedRow, 0).toString();
                try {
                    Class.forName("com.mysql.cj.jdbc.Driver");
                    Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/sv", "root", "123456");
                    PreparedStatement stmt = con.prepareStatement("delete from sinhvien where MSSV=?");
                    stmt.setString(1, mssv);
                    stmt.executeUpdate();
                    con.close();
                    DefaultTableModel model = (DefaultTableModel) jTableSV.getModel();
                    model.removeRow(selectedRow);
                } catch (SQLException ex) {
                    Logger.getLogger(QLSV.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(QLSV.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_jbtnDelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QLSV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QLSV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QLSV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QLSV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new QLSV().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableSV;
    private javax.swing.JButton jbtnAdd;
    private javax.swing.JButton jbtnDel;
    private javax.swing.JButton jbtnEdit;
    private javax.swing.JButton jbtnExit;
    private javax.swing.JButton jbtnOpenDatabase;
    private javax.swing.JButton jbtnSearch;
    private javax.swing.JTextField jtxtBirth;
    private javax.swing.JTextField jtxtHoa;
    private javax.swing.JTextField jtxtLy;
    private javax.swing.JTextField jtxtMSSV;
    private javax.swing.JTextField jtxtName;
    private javax.swing.JTextField jtxtToan;
    // End of variables declaration//GEN-END:variables
}
